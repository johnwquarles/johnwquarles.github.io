'use strict';

angular.module('app.controllers').controller('Header', function (Ajax, $scope, $timeout, usSpinnerService) {
  // would be more simple to just ng-show the spinner according
  // to presence of codewars data, but I wonder if the CPU doesn't continue
  // to have to spend resources on it after it's hidden.
  // no reason for that, so I've done the below.

  // $timeout: https://github.com/urish/angular-spinner/issues/26
  $scope.loading = true;

  $timeout(function () {
    usSpinnerService.spin('codewars');
  }, 0);

  Ajax.getMyData(function (err, data) {
    $scope.myData = data;
    endLoading();
  });
  Ajax.getOutOf(function (err, data) {
    var outOf = commafy(data.totalCompleted);
    $scope.outOf = outOf;
    endLoading();
  });

  function endLoading() {
    if ($scope.myData && $scope.outOf) {
      usSpinnerService.stop('codewars');
      $scope.loading = false;
    }
  }

  function commafy(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlckN0cmwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBRWhDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRTs7Ozs7OztBQU94RSxRQUFNLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzs7QUFFdEIsVUFBUSxDQUFDLFlBQVc7QUFDbEIsb0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0dBQ25DLEVBQUUsQ0FBQyxDQUFDLENBQUM7O0FBRU4sTUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFTLEdBQUcsRUFBRSxJQUFJLEVBQUU7QUFDakMsVUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7QUFDckIsY0FBVSxFQUFFLENBQUM7R0FDZCxDQUFDLENBQUM7QUFDSCxNQUFJLENBQUMsUUFBUSxDQUFDLFVBQVMsR0FBRyxFQUFFLElBQUksRUFBRTtBQUNoQyxRQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3pDLFVBQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLGNBQVUsRUFBRSxDQUFDO0dBQ2QsQ0FBQyxDQUFBOztBQUVGLFdBQVMsVUFBVSxHQUFHO0FBQ3BCLFFBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsS0FBSyxFQUFFO0FBQ2pDLHNCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxZQUFNLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztLQUN4QjtHQUNGOztBQUVELFdBQVMsT0FBTyxDQUFDLENBQUMsRUFBRTtBQUNoQixXQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7R0FDN0Q7Q0FFRixDQUFDLENBQUEiLCJmaWxlIjoiSGVhZGVyQ3RybC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAuY29udHJvbGxlcnMnKVxuXG4uY29udHJvbGxlcignSGVhZGVyJywgZnVuY3Rpb24gKEFqYXgsICRzY29wZSwgJHRpbWVvdXQsIHVzU3Bpbm5lclNlcnZpY2UpIHtcbiAgLy8gd291bGQgYmUgbW9yZSBzaW1wbGUgdG8ganVzdCBuZy1zaG93IHRoZSBzcGlubmVyIGFjY29yZGluZ1xuICAvLyB0byBwcmVzZW5jZSBvZiBjb2Rld2FycyBkYXRhLCBidXQgSSB3b25kZXIgaWYgdGhlIENQVSBkb2Vzbid0IGNvbnRpbnVlXG4gIC8vIHRvIGhhdmUgdG8gc3BlbmQgcmVzb3VyY2VzIG9uIGl0IGFmdGVyIGl0J3MgaGlkZGVuLlxuICAvLyBubyByZWFzb24gZm9yIHRoYXQsIHNvIEkndmUgZG9uZSB0aGUgYmVsb3cuXG5cbiAgLy8gJHRpbWVvdXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS91cmlzaC9hbmd1bGFyLXNwaW5uZXIvaXNzdWVzLzI2XG4gICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcblxuICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICB1c1NwaW5uZXJTZXJ2aWNlLnNwaW4oJ2NvZGV3YXJzJyk7XG4gIH0sIDApO1xuXG4gIEFqYXguZ2V0TXlEYXRhKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICRzY29wZS5teURhdGEgPSBkYXRhO1xuICAgIGVuZExvYWRpbmcoKTtcbiAgfSk7XG4gIEFqYXguZ2V0T3V0T2YoZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgdmFyIG91dE9mID0gY29tbWFmeShkYXRhLnRvdGFsQ29tcGxldGVkKTtcbiAgICAkc2NvcGUub3V0T2YgPSBvdXRPZjtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pXG5cbiAgZnVuY3Rpb24gZW5kTG9hZGluZygpIHtcbiAgICBpZiAoJHNjb3BlLm15RGF0YSAmJiAkc2NvcGUub3V0T2YpIHtcbiAgICAgIHVzU3Bpbm5lclNlcnZpY2Uuc3RvcCgnY29kZXdhcnMnKTtcbiAgICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29tbWFmeSh4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csIFwiLFwiKTtcbiAgfVxuXG59KVxuIl19
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJIZWFkZXJDdHJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAuY29udHJvbGxlcnMnKVxuXG4uY29udHJvbGxlcignSGVhZGVyJywgZnVuY3Rpb24gKEFqYXgsICRzY29wZSwgJHRpbWVvdXQsIHVzU3Bpbm5lclNlcnZpY2UpIHtcbiAgLy8gd291bGQgYmUgbW9yZSBzaW1wbGUgdG8ganVzdCBuZy1zaG93IHRoZSBzcGlubmVyIGFjY29yZGluZ1xuICAvLyB0byBwcmVzZW5jZSBvZiBjb2Rld2FycyBkYXRhLCBidXQgSSB3b25kZXIgaWYgdGhlIENQVSBkb2Vzbid0IGNvbnRpbnVlXG4gIC8vIHRvIGhhdmUgdG8gc3BlbmQgcmVzb3VyY2VzIG9uIGl0IGFmdGVyIGl0J3MgaGlkZGVuLlxuICAvLyBubyByZWFzb24gZm9yIHRoYXQsIHNvIEkndmUgZG9uZSB0aGUgYmVsb3cuXG5cbiAgLy8gJHRpbWVvdXQ6IGh0dHBzOi8vZ2l0aHViLmNvbS91cmlzaC9hbmd1bGFyLXNwaW5uZXIvaXNzdWVzLzI2XG4gICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcblxuICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICB1c1NwaW5uZXJTZXJ2aWNlLnNwaW4oJ2NvZGV3YXJzJyk7XG4gIH0sIDApO1xuXG4gIEFqYXguZ2V0TXlEYXRhKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICRzY29wZS5teURhdGEgPSBkYXRhO1xuICAgIGVuZExvYWRpbmcoKTtcbiAgfSk7XG4gIEFqYXguZ2V0T3V0T2YoZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgdmFyIG91dE9mID0gY29tbWFmeShkYXRhLnRvdGFsQ29tcGxldGVkKTtcbiAgICAkc2NvcGUub3V0T2YgPSBvdXRPZjtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pXG5cbiAgZnVuY3Rpb24gZW5kTG9hZGluZygpIHtcbiAgICBpZiAoJHNjb3BlLm15RGF0YSAmJiAkc2NvcGUub3V0T2YpIHtcbiAgICAgIHVzU3Bpbm5lclNlcnZpY2Uuc3RvcCgnY29kZXdhcnMnKTtcbiAgICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29tbWFmeSh4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csIFwiLFwiKTtcbiAgfVxuXG59KVxuIl0sImZpbGUiOiJIZWFkZXJDdHJsLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=