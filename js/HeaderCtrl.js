'use strict';

angular.module('app.controllers').controller('Header', function (Ajax, $timeout, usSpinnerService) {
  // would be more simple to just ng-show the spinner according
  // to presence of codewars data, but I wonder if the CPU doesn't continue
  // to have to spend resources on it after it's hidden.
  // no reason for that, so I've done the below.

  // $timeout: https://github.com/urish/angular-spinner/issues/26

  var vm = this;
  vm.loading = true;

  $timeout(function () {
    usSpinnerService.spin('codewars');
  }, 0);

  Ajax.getMyData(function (err, data) {
    vm.myData = data;
    endLoading();
  });
  Ajax.getOutOf(function (err, data) {
    var outOf = commafy(data.totalCompleted);
    vm.outOf = outOf;
    endLoading();
  });

  function endLoading() {
    if (vm.myData && vm.outOf) {
      usSpinnerService.stop('codewars');
      vm.loading = false;
    }
  }

  function commafy(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
  }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlckN0cmwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBRWhDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsVUFBVSxJQUFJLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFOzs7Ozs7OztBQVFoRSxNQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFDZCxJQUFFLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzs7QUFFbEIsVUFBUSxDQUFDLFlBQVc7QUFDbEIsb0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0dBQ25DLEVBQUUsQ0FBQyxDQUFDLENBQUM7O0FBRU4sTUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFTLEdBQUcsRUFBRSxJQUFJLEVBQUU7QUFDakMsTUFBRSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7QUFDakIsY0FBVSxFQUFFLENBQUM7R0FDZCxDQUFDLENBQUM7QUFDSCxNQUFJLENBQUMsUUFBUSxDQUFDLFVBQVMsR0FBRyxFQUFFLElBQUksRUFBRTtBQUNoQyxRQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3pDLE1BQUUsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQ2pCLGNBQVUsRUFBRSxDQUFDO0dBQ2QsQ0FBQyxDQUFBOztBQUVGLFdBQVMsVUFBVSxHQUFHO0FBQ3BCLFFBQUksRUFBRSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFO0FBQ3pCLHNCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxRQUFFLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztLQUNwQjtHQUNGOztBQUVELFdBQVMsT0FBTyxDQUFDLENBQUMsRUFBRTtBQUNoQixXQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7R0FDN0Q7Q0FFRixDQUFDLENBQUEiLCJmaWxlIjoiSGVhZGVyQ3RybC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAuY29udHJvbGxlcnMnKVxuXG4uY29udHJvbGxlcignSGVhZGVyJywgZnVuY3Rpb24gKEFqYXgsICR0aW1lb3V0LCB1c1NwaW5uZXJTZXJ2aWNlKSB7XG4gIC8vIHdvdWxkIGJlIG1vcmUgc2ltcGxlIHRvIGp1c3Qgbmctc2hvdyB0aGUgc3Bpbm5lciBhY2NvcmRpbmdcbiAgLy8gdG8gcHJlc2VuY2Ugb2YgY29kZXdhcnMgZGF0YSwgYnV0IEkgd29uZGVyIGlmIHRoZSBDUFUgZG9lc24ndCBjb250aW51ZVxuICAvLyB0byBoYXZlIHRvIHNwZW5kIHJlc291cmNlcyBvbiBpdCBhZnRlciBpdCdzIGhpZGRlbi5cbiAgLy8gbm8gcmVhc29uIGZvciB0aGF0LCBzbyBJJ3ZlIGRvbmUgdGhlIGJlbG93LlxuXG4gIC8vICR0aW1lb3V0OiBodHRwczovL2dpdGh1Yi5jb20vdXJpc2gvYW5ndWxhci1zcGlubmVyL2lzc3Vlcy8yNlxuXG4gIHZhciB2bSA9IHRoaXM7XG4gIHZtLmxvYWRpbmcgPSB0cnVlO1xuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHVzU3Bpbm5lclNlcnZpY2Uuc3BpbignY29kZXdhcnMnKTtcbiAgfSwgMCk7XG5cbiAgQWpheC5nZXRNeURhdGEoZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgdm0ubXlEYXRhID0gZGF0YTtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pO1xuICBBamF4LmdldE91dE9mKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgIHZhciBvdXRPZiA9IGNvbW1hZnkoZGF0YS50b3RhbENvbXBsZXRlZCk7XG4gICAgdm0ub3V0T2YgPSBvdXRPZjtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pXG5cbiAgZnVuY3Rpb24gZW5kTG9hZGluZygpIHtcbiAgICBpZiAodm0ubXlEYXRhICYmIHZtLm91dE9mKSB7XG4gICAgICB1c1NwaW5uZXJTZXJ2aWNlLnN0b3AoJ2NvZGV3YXJzJyk7XG4gICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29tbWFmeSh4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csIFwiLFwiKTtcbiAgfVxuXG59KVxuIl19
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJIZWFkZXJDdHJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAuY29udHJvbGxlcnMnKVxuXG4uY29udHJvbGxlcignSGVhZGVyJywgZnVuY3Rpb24gKEFqYXgsICR0aW1lb3V0LCB1c1NwaW5uZXJTZXJ2aWNlKSB7XG4gIC8vIHdvdWxkIGJlIG1vcmUgc2ltcGxlIHRvIGp1c3Qgbmctc2hvdyB0aGUgc3Bpbm5lciBhY2NvcmRpbmdcbiAgLy8gdG8gcHJlc2VuY2Ugb2YgY29kZXdhcnMgZGF0YSwgYnV0IEkgd29uZGVyIGlmIHRoZSBDUFUgZG9lc24ndCBjb250aW51ZVxuICAvLyB0byBoYXZlIHRvIHNwZW5kIHJlc291cmNlcyBvbiBpdCBhZnRlciBpdCdzIGhpZGRlbi5cbiAgLy8gbm8gcmVhc29uIGZvciB0aGF0LCBzbyBJJ3ZlIGRvbmUgdGhlIGJlbG93LlxuXG4gIC8vICR0aW1lb3V0OiBodHRwczovL2dpdGh1Yi5jb20vdXJpc2gvYW5ndWxhci1zcGlubmVyL2lzc3Vlcy8yNlxuXG4gIHZhciB2bSA9IHRoaXM7XG4gIHZtLmxvYWRpbmcgPSB0cnVlO1xuXG4gICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHVzU3Bpbm5lclNlcnZpY2Uuc3BpbignY29kZXdhcnMnKTtcbiAgfSwgMCk7XG5cbiAgQWpheC5nZXRNeURhdGEoZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgdm0ubXlEYXRhID0gZGF0YTtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pO1xuICBBamF4LmdldE91dE9mKGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgIHZhciBvdXRPZiA9IGNvbW1hZnkoZGF0YS50b3RhbENvbXBsZXRlZCk7XG4gICAgdm0ub3V0T2YgPSBvdXRPZjtcbiAgICBlbmRMb2FkaW5nKCk7XG4gIH0pXG5cbiAgZnVuY3Rpb24gZW5kTG9hZGluZygpIHtcbiAgICBpZiAodm0ubXlEYXRhICYmIHZtLm91dE9mKSB7XG4gICAgICB1c1NwaW5uZXJTZXJ2aWNlLnN0b3AoJ2NvZGV3YXJzJyk7XG4gICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29tbWFmeSh4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csIFwiLFwiKTtcbiAgfVxuXG59KVxuIl0sImZpbGUiOiJIZWFkZXJDdHJsLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=